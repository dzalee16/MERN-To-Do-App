[{"/home/mladen/Desktop/interview-mladen-jovic/www/src/index.js":"1","/home/mladen/Desktop/interview-mladen-jovic/www/src/App.js":"2","/home/mladen/Desktop/interview-mladen-jovic/www/src/components/ToDoItem/index.js":"3","/home/mladen/Desktop/interview-mladen-jovic/www/src/components/ToDoForm/index.js":"4","/home/mladen/Desktop/interview-mladen-jovic/www/src/components/ToDoItems/index.js":"5","/home/mladen/Desktop/interview-mladen-jovic/www/src/services/services.js":"6"},{"size":432,"mtime":1609231481792,"results":"7","hashOfConfig":"8"},{"size":3571,"mtime":1609699553845,"results":"9","hashOfConfig":"8"},{"size":1191,"mtime":1609699868739,"results":"10","hashOfConfig":"8"},{"size":461,"mtime":1609518222546,"results":"11","hashOfConfig":"8"},{"size":614,"mtime":1609691898566,"results":"12","hashOfConfig":"8"},{"size":604,"mtime":1609697729253,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"n302t9",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/home/mladen/Desktop/interview-mladen-jovic/www/src/index.js",[],["28","29"],"/home/mladen/Desktop/interview-mladen-jovic/www/src/App.js",["30"],"import React, { useEffect, useState } from \"react\";\nimport ToDoForm from \"./components/ToDoForm\";\nimport ToDoItems from \"./components/ToDoItems\";\nimport {\n  addTodo,\n  getAllTodos,\n  deleteTodo,\n  updateTodo,\n} from \"./services/services\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [text, setText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [bgColor, setBgColor] = useState(\"\");\n\n  //Get all tasks from DB\n  useEffect(() => {\n    getAllTodos()\n      .then((res) => {\n        const data = res.data;\n        setTodos(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  useEffect(() => {\n    console.log(todos);\n  }, [todos]);\n\n  const handleChange = (e) => {\n    setText(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const data = {\n      title: text,\n      completed: false,\n    };\n\n    addTodo(data)\n      .then((res) => {\n        return getAllTodos();\n      })\n      .then((res) => {\n        setTodos(res.data);\n      })\n      .catch((err) => {\n        console.log(\"Error\", err);\n      });\n\n    setText(\"\");\n  };\n\n  //remove ToDos\n  const removeItems = (i) => {\n    let newTodos = [...todos];\n    newTodos.map((todo, index) => {\n      if (index === i) {\n        const id = todo._id;\n        deleteTodo(id)\n          .then((res) => {\n            return getAllTodos();\n          })\n          .then((res) => {\n            setTodos(res.data);\n          })\n          .catch((err) => {\n            console.log(\"Error\", err);\n          });\n      }\n      return newTodos;\n    });\n  };\n\n  //edit ToDos\n  const editItems = (newValue, i) => {\n    setTodos(\n      todos.map((todo, index) =>\n        index === i ? { ...todo, title: newValue } : { ...todo }\n      )\n    );\n  };\n\n  //Edit submit\n  const handleEdit = (i) => {\n    let newTodos = [...todos];\n    newTodos.map((todo, index) => {\n      if (index === i) {\n        const id = todo._id;\n        const data = {\n          ...todo,\n        };\n        updateTodo(id, data)\n          .then((res) => console.log(\"Sucefully update todo\", res))\n          .catch((err) => console.log(\"Error\", err));\n      }\n      return newTodos;\n    });\n  };\n\n  //chnage bg color\n  const handleBgColor = (e) => {\n    setBgColor(e.target.value);\n  };\n\n  //Mark as completed\n  const handleCompleted = (i) => {\n    setTodos(\n      todos.map((todo, index) => {\n        if (i === index) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n        return {\n          ...todo,\n        };\n      })\n    );\n    todos.map((todo, index) => {\n      if (index === i) {\n        const id = todo._id;\n        const data = {\n          ...todo,\n          completed: !todo.completed,\n        };\n        updateTodo(id, data)\n          .then((res) => console.log(\"Mladen\", res))\n          .catch((err) => console.log(err));\n      }\n    });\n  };\n\n  return (\n    <main className=\"app\">\n      <h1>To Do - List</h1>\n      <div className=\"content\">\n        <ToDoForm\n          className=\"form\"\n          text={text}\n          handleChange={handleChange}\n          handleSubmit={handleSubmit}\n          handleBgColor={handleBgColor}\n        />\n        {todos.length !== 0 && (\n          <ToDoItems\n            className=\"list-items\"\n            todos={todos}\n            removeItems={removeItems}\n            editItems={editItems}\n            bgColor={bgColor}\n            handleCompleted={handleCompleted}\n            handleEdit={handleEdit}\n          />\n        )}\n      </div>\n    </main>\n  );\n};\n\nexport default App;\n","/home/mladen/Desktop/interview-mladen-jovic/www/src/components/ToDoItem/index.js",[],"/home/mladen/Desktop/interview-mladen-jovic/www/src/components/ToDoForm/index.js",[],"/home/mladen/Desktop/interview-mladen-jovic/www/src/components/ToDoItems/index.js",[],"/home/mladen/Desktop/interview-mladen-jovic/www/src/services/services.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":126,"column":29,"nodeType":"37","messageId":"38","endLine":126,"endColumn":31},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]